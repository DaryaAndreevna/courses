# TRAIN
require 'matrix'
 
class Train
  
  def initialize
    @count = 0
    @array = [
      [' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.','@','@','@','@','@','@','@','@','@','@','@','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
      [' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.','@','@','@','@','@','@','@','@','@','@','@','@','@','@','@','@','@','@','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
      [' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.','@','@','@','@','@','@','@','@','@','@','@','@','@','@','@','@','@','@','@','@','@','@','@','@','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
      [' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','@','@','@','@','@','@','@','_','_','_','_','_','@','@','@','@','@','@','@','@','@','@','@','@','@','@','@','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
      [' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','@','@','@','@','_','_','_','_','_','_','_','_','_','@','@','@','_','_','_','_','_','_','_','_','_','_','@','@','@','@',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
      [' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','@','@','@','@','_','@','_','_','_','_','_','_','_',0,0,'|',0,0,'_','@','_','_','_','_','_','_','_','_','@','@','@','@',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
      [' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','@','@','@','@','_','_','_','_','_','_','_','_','_','_',0,0,'|',0,0,'_','_','_','_','_','_','_','_','_','_','@','@','@','@','@',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
      [' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','@','@','@','@','_','_','_','_','_','_','_','_','//','@','@','@','@','\\',' ','_','_','_','_','_','_','_','@','@','@','@',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
      [' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','@','@','@','@','@','@','_','_','_','_','_','//','@','@','@','@','@','@','\\','_','_','_','_','_','@','@','@','@','@','@',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
      [' ',' ',' ',' ',' ',' ',' ',' ',' ','@','@','@','@','-','-','-','-','-','-','-','-','-','-','\\','@','@','@','@','@','@','//','-','-','-','-','-','-','-','-','@','@','@','@','@',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
      [' ',' ',' ',' ',' ',' ','@','@','@','@','@','-','-','-','-','-','-','-','-','-','-','-','-','-','\\','@','@','@','@','//','-','-','-','-','-','-','-','-','-','-','-','-','@','@','@','@','@','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
      [' ',' ',' ',' ','@','@','@','@','@','@','`','-','-','-','-','-','-','-','-','-','-','-','-','-','-','\\','@','@','//','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','@','@','@','@','@','@','.',' ',' ',' ',' ',' ',' ',' ',' '],
      [' ',' ','@','@','@','@','@','@','@','`','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','@','@','@','@','@','@','@','.',' ',' ',' ',' '],
      ['@','@','`','_','_','_','_','_','@','@','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','@','@','_','_','_','_','_','`','@','@'],
      [' ',' ',' ',' ',' ',' ',' ','@','@','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','@','@',' ',' ',' ',' ',' ',' ',' ',' ',' '],
      [' ',' ',' ',' ',' ',' ',' ','@','@','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','@','@',' ',' ',' ',' ',' ',' ',' ',' ',' '],
      [' ',' ',' ',' ',' ',' ',' ','@','@','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','@','@',' ',' ',' ',' ',' ',' ',' ',' ',' '],
      [' ',' ',' ',' ',' ',' ',' ','@','@','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','-','-','-','-','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','@','@',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
      [' ',' ',' ',' ',' ',' ','//','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','\\',' ',' ','//','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','\\',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
      [' ',' ',' ',' ',' ','//','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','|',' ',' ','|','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
      [' ',' ',' ',' ',' ',' ','\\','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','//',' ',' ','\\','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','//',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ']
    ]
  end
  
  def display(array, time = 0.03)
    puts `clear`
    4.times do puts end
    array.each do |r|
      puts r.map {|p| p}.join
    end
    sleep(time)
  end
  
  def move_right
    temp = []
    @count += 1
    matrix = Matrix.rows(@array)
    matrix.row_vectors.each do |row|
      row = row.to_a
      row.unshift(' ')
      temp << row
    end
    @array = temp
    if check_count == 1 then
      up_your_right_foot(@array)
    else
      up_your_left_foot(@array)
    end
  end
  
  def move_left
    @count -= 1
    matrix = Matrix.rows(@array)
    temp = []
    matrix.row_vectors.each do |row|
      row = row.to_a
      row.delete_at(0)
      temp << row
    end
    @array = temp
     if check_count == 1 then
       up_your_right_foot(temp)
     else
       up_your_left_foot(temp)
     end
  end
  
  def move_your_eyes
    temp = []
    matrix = Matrix.rows(@array)
    matrix.row_vectors.each do |row|
      if row == matrix.row(5) then
        row = row.to_a
        if @count == 0  then
          row[(15+@count)..(23+@count)] = ['_','@','_','_','_','_','_','_','_']
          row[(29+@count)..(39+@count)] = ['_','@','_','_','_','_','_','_','_','_','_'] 
        end
        if @count >= 10 then
          row[(15+@count)..(23+@count)] = ['_','_','_','@','_','_','_','_','_']
          row[(29+@count)..(39+@count)] = ['_','_','_','_','@','_','_','_','_','_','_']
        end
        if @count >= 34 then
           row[(15+@count)..(23+@count)] = ['_','_','_','_','_','@','_','_','_']
           row[(29+@count)..(39+@count)] = ['_','_','_','_','_','_','@','_','_','_','_']
        end
        if @count >= 58 then
          row[(15+@count)..(23+@count)] = ['_','_','_','_','_','_','_','@','_']
          row[(29+@count)..(39+@count)] = ['_','_','_','_','_','_','_','_','@','_','_'] 
        end
      end
      temp << row.to_a
    end
    @array = temp
  end
  
  def wink_your_eyes
    temp = []
    matrix = Matrix.rows(@array)
    matrix.row_vectors.each do |row|
      if  row == matrix.row(3)||
          row == matrix.row(4)||
          row == matrix.row(6)||
          row == matrix.row(7)|| 
          row == matrix.row(8)   then
        row = row.to_a
        row.map! do |element|
          element = '*' if element == '_'
          element
        end
      end
      if row == matrix.row(5) then
       row = row.to_a
       row[(15+@count)..(23+@count)] = ['*','*','*','*','*','*','*','*','*']
       row[(29+@count)..(39+@count)] = ['*','*','*','*','*','*','*','*','*','*','*']
      end
      temp << row.to_a
    end
    display(temp, 0.3)
    display(@array, 0.3)
  end
  
  def raise_your_hands
    temp = []
    matrix = Matrix.rows(@array)
    matrix.row_vectors.each do |row|
      if row == matrix.row(13) then
        row = row.to_a.drop(4) 
        row = row.insert( 2+@count,'_','_', '_', '_')
        row = row.insert( -6 ,'_','_', '_', '_')
      end
      if row == matrix.row(12) then
        row = row.to_a.drop(3)  
        row = row.to_a.insert( 5+@count,' ',' ', ' ')
        row = row.insert( -12 ,' ',' ',' ',' ')
      end
      if row == matrix.row(11) then
        row = row.to_a.drop(2)  
        row = row.to_a.insert( 7+@count,' ',' ')
        row = row.insert( -15,' ',' ')
      end
      temp << row.to_a
    end
    display(temp, 0.3)
    display(@array, 0.3)
  end
  
  def up_your_left_foot(array)
    temp = []
    ground_under_foot = [' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ']
    matrix = Matrix.rows(array)
    matrix.row_vectors.each do |row|
      if row == matrix.row(16) then
        row = row.to_a
        row[0+@count..25+@count] = matrix.row(17).to_a[0+@count..25+@count]
        row
      end
      if row == matrix.row(17) then
        row = row.to_a
        row[0+@count..25+@count] = matrix.row(18).to_a[0+@count..25+@count]
        row
      end
      if row == matrix.row(18) then
        row = row.to_a
        row[0+@count..25+@count] = matrix.row(19).to_a[0+@count..25+@count] 
        row
      end
      if row == matrix.row(19) then
        row = row.to_a
        row[0+@count..25+@count] = matrix.row(20).to_a[0+@count..25+@count]
        row
      end
      if row == matrix.row(20) then
        row = row.to_a
        row[0+@count..25+@count] = ground_under_foot
        row
      end
      temp << row.to_a
    end
    display(temp)
    display(@array)
  end
  
  def up_your_right_foot(array)
    temp = []
    ground_under_foot = [' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ']
    matrix = Matrix.rows(array)
    matrix.row_vectors.each do |row|
      if row == matrix.row(16) then
        row = row.to_a
        row[-33, 32] = matrix.row(17).to_a[-33, 32]
        row
      end
      if row == matrix.row(17) then
        row = row.to_a
        row[-33, 32] = matrix.row(18).to_a[-33, 32]
        row
      end
      if row == matrix.row(18) then
        row = row.to_a
        row[-33, 32] = matrix.row(19).to_a[-33, 32]
        row
      end
      if row == matrix.row(19) then
        row = row.to_a
        row[-33, 32] = matrix.row(20).to_a[-33, 32]
        row
      end
      if row == matrix.row(20) then
        row = row.to_a
        row[-33, 32] = ground_under_foot
        row
      end
      temp << row.to_a
    end
   display(temp)
   display(@array)
  end
  
  def check_count
    @count%2 == 0?1:0
  end
end




